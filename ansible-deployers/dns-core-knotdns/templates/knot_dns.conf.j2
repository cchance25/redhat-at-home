server:
    identity: {{ hostvars[inventory_hostname]['ansible_set_hostname'] }}.{{ system_domain }}
    listen: [ 127.0.0.1@{{ knot_auth_dns_port }}, ::1@{{ knot_auth_dns_port }} ]
    rundir: "/run/knot"
    user: {{ knot_user }}:{{ knot_group }}

log:
  - target: {{ knot_auth_dns_logging }}
    any: {{ knot_auth_dns_logging_level }}

template:
  - id: default
    storage: {{ knot_auth_dns_default_zone_path }}

{{ tsigkey_out.stdout }}

{% if dns_server_designation == "primary" %}
# Primary DNS Server Configuration

{% if dns_systems|length > 1 or knot_auth_dns_forward_resolver_fallback|bool or knot_resolving_dns|bool %}
remote:
{% if dns_systems|length > 1 %}
{% for system in dns_systems %}
{% if system.name != hostvars[inventory_hostname]['ansible_set_hostname'] %}
  - id: {{ system.name }}
    address: {{ system.ip }}
    key: {{ knot_auth_dns_tsigkey_name }}
{% endif %}
{% endfor %}
{% endif %}
{% if knot_auth_dns_forward_resolver_fallback|bool %}
{% for server in knot_auth_dns_forward_resolver_fallback_servers %}
  - id: {{ server.remote_name }}
    address: {{ server.address }}@{{ server.port }}
{% endfor %}
{% endif %}
{% endif %}

{% if knot_auth_dns_forward_resolver_fallback|bool %}
mod-dnsproxy:
{% for server in knot_auth_dns_forward_resolver_fallback_servers %}
  - id: {{ server.dnsproxy_id }}
    remote: {{ server.remote_name }}
    fallback: on
{% endfor %}
{% endif %}

acl:
  - id: acl_transfer
    address: {{ knot_auth_dns_acl_transfer_allow_cidr }}
    action: transfer
    key: {{ knot_auth_dns_tsigkey_name }}
  - id: acl_update
    address: {{ knot_auth_dns_acl_update_allow_cidr }}
    action: update
    key: {{ knot_auth_dns_tsigkey_name }}

zone:
{% for zone in zones %}
  - domain: {{ zone.name }}
    semantic-checks: {{ knot_auth_dns_semantic_checks }}
    file: {{ zone.name }}.zone
    acl: [acl_update, acl_transfer]
{% if dns_systems|length > 1 %}
    notify: [{% for system in dns_systems %}{% if system.name != dns_systems[0]['name'] %}{{ system.name }}{% if loop.index != dns_systems|length %}, {% endif %}{% endif %}{% endfor %}]
{% endif %}
{% endfor %}
{% endif %}

{% if dns_server_designation == "replica" %}
# Replica DNS Servers Configuration

{% if dns_systems|length > 1 or knot_auth_dns_forward_resolver_fallback|bool or knot_resolving_dns|bool %}
remote:
{% if dns_systems|length > 1 %}
{% for system in dns_systems %}
{% if system.name != hostvars[inventory_hostname]['ansible_set_hostname'] %}
  - id: {{ system.name }}
    address: {{ system.ip }}
    key: {{ knot_auth_dns_tsigkey_name }}
{% endif %}
{% endfor %}
{% endif %}
{% if knot_auth_dns_forward_resolver_fallback|bool %}
{% for server in knot_auth_dns_forward_resolver_fallback_servers %}
  - id: {{ server.remote_name }}
    address: {{ server.address }}@{{ server.port }}
{% endfor %}
{% endif %}
{% endif %}

acl:
  - id: acl_notify
    address: {{ knot_auth_dns_acl_notify_allow_cidr }}
    action: notify
    key: {{ knot_auth_dns_tsigkey_name }}

zone:
{% for zone in zones %}
  - domain: {{ zone.name }}
    semantic-checks: {{ knot_auth_dns_semantic_checks }}
    file: {{ zone.name }}.zone
    acl: acl_notify
    master: {{ dns_systems[0]['name'] }}
{% endfor %}
{% endif %}
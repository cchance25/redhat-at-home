---
- name: Enable Knot DNS Copr Repo
  shell: dnf copr enable -y @cznic/knot-dns-latest
  args:
    creates: /etc/yum.repos.d/_copr:copr.fedorainfracloud.org:group_cznic:knot-dns-latest.repo
    warn: false

- name: Install Knot DNS
  yum:
    name: ["knot", "knot-utils"]
    state: latest
    update_cache: yes

- name: Create Zones directory
  file:
    path: "{{ knot_auth_dns_default_zone_path }}"
    state: directory
    group: "{{ knot_group }}"
    owner: "{{ knot_user }}"
    mode: 0770

- name: Generate tsigkey on first dns_systems host, Primary DNS Server
  shell:
    cmd: "keymgr -t {{ knot_auth_dns_tsigkey_name }} > {{ knot_auth_dns_tsigkey_path }}"
  args:
    creates: "{{ knot_auth_dns_tsigkey_path }}"
  when: dns_systems[0]['name'] == hostvars[inventory_hostname]['ansible_set_hostname']

- name: Read tsigkey on Primary DNS Server
  shell:
    cmd: "cat {{ knot_auth_dns_tsigkey_path }}"
  register: tsigkey_out
  when: dns_systems[0]['name'] == hostvars[inventory_hostname]['ansible_set_hostname']

- name: Set tsigkey fact on every dns_systems host
  set_fact:
    tsigkey_out: "{{ tsigkey_out }}"
  delegate_to: "{{ item }}"
  with_items: "{{ ansible_play_batch }}"
  when: dns_systems[0]['name'] == hostvars[inventory_hostname]['ansible_set_hostname']

- name: Test key out
  debug:
    msg: "{{ tsigkey_out }}"

- name: Template over Knot DNS Configuration to Primary DNS Server
  template:
    src: knot_dns.conf.j2
    dest: /etc/knot/knot.conf
    backup: yes
    group: "{{ knot_group }}"
    owner: "{{ knot_user }}"
  notify: restart knot dns
  vars:
    dns_server_designation: primary
  #when: inventory_hostname == groups['dns_servers'][0]
  when: dns_systems[0]['name'] == hostvars[inventory_hostname]['ansible_set_hostname']

- name: Template over Zone files to Primary DNS Server
  template:
    src: knot_dns.zone.j2
    dest: "{{ knot_auth_dns_default_zone_path }}/{{ item.name }}.zone"
    backup: yes
    group: "{{ knot_group }}"
    owner: "{{ knot_user }}"
  loop: "{{ zones }}"
  notify: restart knot dns
  when: dns_systems[0]['name'] == hostvars[inventory_hostname]['ansible_set_hostname']
